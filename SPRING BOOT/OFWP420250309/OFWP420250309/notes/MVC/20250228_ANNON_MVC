Spring Framework from version: 3.2+ introduced annotation-driven programming model deprecating the interface-driven programming. In annotation programming we bind bunch of annotations on our application components letting the framework identify the classes, the methods, their parameters and returntypes so that we avoid writing classes implementing from Framework.
	
The Framework / underlying runtime env reads these annotations in identifying the components and invoke the respective methods with appropriate parameter values. 
	
From this we got the flexibility of writing the controller components defined with our own handler methods taking any parameterTypes or returnTypes
But we cannot take any parameterType or returnType in writing the methods of the controller classes, even though we have freemdom choosing what should be taken as parameters and return types these must be supported by the underlying framework or runtime environment.
	
Supported parameterTypes:
1. ServletRequest / ServletResponse
2. WebRequest / NativeWebRequest = generic api to access request parameters and session attributes without using servlet api
3. HttpSession
4. java.security.Principal
5. HttpMethod
6. java.util.Locale
7. InputStream / Reader = request body to be read in raw representation format

8. @PathVariable = Template parameters
9. @MatrixVariable 
10. @RequestParam = query parameters
11. @RequestHeader
12. @CookieValue
13. @RequestBody 
14. @ModelAttribute = spring mvc to extract form data sent aspart of the post request
15. Errors, BindingResult
16. SessionStatus + @SessionAttribute


Supported ReturnTypes:
1. String
2. ModelAndView
3. Model/ModelMap
4. Map
5. View
6. Void


class ViewHomeController extends AbstractController {
	public ModelAndView handleRequestInternal(HttpServletRequest req, HttpServletResponse resp) {
		// logic
		return new ModelAndView("home");
	}
}


@Controller
class ViewHomeController {
	@RequestMapping("/home.htm")
	public String showHomePage() {
		return "home";
	}
}
-------------------------------------------------------------------------------------------------------------------------------------
Forwarding controllers
There are #2 forwarding controllers are available in spring webmvc
1. ParameterizableViewController
2. UrlFileNameViewController


1.Static Jsp / Programmatic Controllers: WebMvcConfigurer (BeanNameUrlHandlerMapping, ParameterizableViewController, InternalResourceViewResolver)
	
2. Annotation-driven approach: RequestMappingHandlerMapping, @Annotated Controllers and MvcConfigurer

Annotation controllers





































